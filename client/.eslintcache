[{"/Users/brianbigdelle/Desktop/Code/lotto/client/src/index.js":"1","/Users/brianbigdelle/Desktop/Code/lotto/client/src/reportWebVitals.js":"2","/Users/brianbigdelle/Desktop/Code/lotto/client/src/App.js":"3","/Users/brianbigdelle/Desktop/Code/lotto/client/src/detectLottoClick.js":"4","/Users/brianbigdelle/Desktop/Code/lotto/client/src/DetectLottoClick.js":"5","/Users/brianbigdelle/Desktop/Code/lotto/client/src/SetString.js":"6","/Users/brianbigdelle/Desktop/Code/lotto/client/src/ReadString.js":"7","/Users/brianbigdelle/Desktop/Code/lotto/client/src/getBalance.js":"8","/Users/brianbigdelle/Desktop/Code/lotto/client/src/GetBalance.js":"9"},{"size":859,"mtime":1609758833131,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608839918514,"results":"12","hashOfConfig":"11"},{"size":1907,"mtime":1609807576105,"results":"13","hashOfConfig":"11"},{"size":228,"mtime":1609108224379,"results":"14","hashOfConfig":"11"},{"size":367,"mtime":1609194200111,"results":"15","hashOfConfig":"11"},{"size":1549,"mtime":1609809153060,"results":"16","hashOfConfig":"11"},{"size":796,"mtime":1609809012124,"results":"17","hashOfConfig":"11"},{"size":846,"mtime":1609807519735,"results":"18","hashOfConfig":"11"},{"size":766,"mtime":1609809009917,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"endm4v",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},"/Users/brianbigdelle/Desktop/Code/lotto/client/src/index.js",["42"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';  //i dont think that this is needed but whatever, the tutorial uses it.\nimport App from './App';\n\n//import drizzle functions and contract artifact\nimport { Drizzle, generateStore } from \"@drizzle/store\";\nimport SimpleStorage from \"./contracts/SimpleStorage.json\"; \nimport Game from \"./contracts/Game.json\";\nimport LTO from \"./contracts/LTO.json\";\n\n// let drizzle know what contracts we want and how to access our test blockchain\nconst options = {\n  contracts: [SimpleStorage, Game, LTO ], //adding all necessary contracts\n  web3: {\n    fallback: {\n      type: \"ws\",\n      url: \"ws://127.0.0.1:9545\",\n    },\n  },\n};\n\n// setup the drizzle store and drizzle\nconst drizzle = new Drizzle(options);\n\nReactDOM.render(<App drizzle={drizzle} />, document.getElementById('root'));\n\n\n\n\n\n",["43","44"],"/Users/brianbigdelle/Desktop/Code/lotto/client/src/reportWebVitals.js",[],"/Users/brianbigdelle/Desktop/Code/lotto/client/src/App.js",[],"/Users/brianbigdelle/Desktop/Code/lotto/client/src/detectLottoClick.js",[],["45","46"],"/Users/brianbigdelle/Desktop/Code/lotto/client/src/DetectLottoClick.js",[],"/Users/brianbigdelle/Desktop/Code/lotto/client/src/SetString.js",[],"/Users/brianbigdelle/Desktop/Code/lotto/client/src/ReadString.js",[],"/Users/brianbigdelle/Desktop/Code/lotto/client/src/getBalance.js",["47"],"/Users/brianbigdelle/Desktop/Code/lotto/client/src/GetBalance.js",["48"],"import React from \"react\";\n\nclass GetBalance extends React.Component{\n\n\tstate = {balance: null }; //any update on this will trigger a re-rendering\n\n\n\tcomponentDidMount() {\n \t\tconst { drizzle } = this.props;  //props is drizzle state, passed in from App.js\n    \tconst Game_contract = drizzle.contracts.Game; //get the game contract\n\n\t\tconst bal = Game_contract.methods[\"getBalance\"].cacheCall(); //get the GetBalance method\n    \t\n    \tthis.setState({balance:bal}); //now react will update every time balance updates\n\t}\n\n\n\t  render(){\n\t  \tconst { Game } = this.props.drizzleState.contracts;\n\n    \t// user address\n    \tconst bal = this.state.balance;\n\n\t  \tif(!bal){ \n\t  \t\treturn \"100\";\n\t  \t}\n\t   \n\t    return( <p>{bal.value}</p>);\n\t  }\n  \n}\n\n\nexport default GetBalance;",{"ruleId":"49","severity":1,"message":"50","line":7,"column":19,"nodeType":"51","messageId":"52","endLine":7,"endColumn":32},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"49","severity":1,"message":"59","line":33,"column":12,"nodeType":"51","messageId":"52","endLine":33,"endColumn":20},{"ruleId":"49","severity":1,"message":"60","line":19,"column":13,"nodeType":"51","messageId":"52","endLine":19,"endColumn":17},"no-unused-vars","'generateStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"'myString' is assigned a value but never used.","'Game' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]